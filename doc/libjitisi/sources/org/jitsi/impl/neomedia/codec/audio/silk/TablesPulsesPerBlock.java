package org.jitsi.impl.neomedia.codec.audio.silk;

import com.sun.media.format.WavAudioFormat;
import org.jitsi.impl.neomedia.codec.video.h264.JNIEncoder;

public class TablesPulsesPerBlock {
    static int[] SKP_Silk_max_pulses_table = new int[]{6, 8, 12, 18};
    static short[][] SKP_Silk_pulses_per_block_BITS_Q6 = new short[][]{new short[]{(short) 30, (short) 140, (short) 282, (short) 444, (short) 560, (short) 625, (short) 654, (short) 677, (short) 731, (short) 780, (short) 787, (short) 844, (short) 859, (short) 960, (short) 896, (short) 1024, (short) 960, (short) 1024, (short) 960, (short) 821}, new short[]{(short) 84, (short) 103, (short) 164, (short) 252, (short) 350, (short) 442, (short) 526, (short) 607, (short) 663, (short) 731, (short) 787, (short) 859, (short) 923, (short) 923, (short) 960, (short) 1024, (short) 960, (short) 1024, (short) 1024, (short) 875}, new short[]{(short) 177, (short) 117, (short) 120, (short) 162, (short) 231, (short) 320, (short) 426, (short) 541, (short) 657, (short) 803, (short) 832, (short) 960, (short) 896, (short) 1024, (short) 923, (short) 1024, (short) 1024, (short) 1024, (short) 960, (short) 1024}, new short[]{(short) 275, (short) 182, (short) 146, (short) 144, (short) 166, (short) 207, (short) 261, (short) 322, (short) 388, (short) 450, (short) 516, (short) 582, (short) 637, (short) 710, (short) 762, (short) 821, (short) 832, (short) 896, (short) 923, (short) 734}, new short[]{(short) 452, (short) 303, (short) 216, (short) 170, (short) 153, (short) 158, (short) 182, (short) 220, (short) 274, (short) 337, (short) 406, (short) 489, (short) 579, (short) 681, (short) 896, (short) 811, (short) 896, (short) 960, (short) 923, (short) 1024}, new short[]{(short) 125, (short) 147, (short) 170, (short) 202, (short) 232, (short) 265, (short) 295, (short) 332, (short) 368, (short) 406, (short) 443, (short) 483, (short) 520, (short) 563, (short) 606, (short) 646, (short) 704, (short) 739, (short) 757, (short) 483}, new short[]{(short) 285, (short) 232, (short) 200, (short) 190, (short) 193, (short) 206, (short) 224, (short) 244, (short) 266, (short) 289, (short) 315, (short) 340, (short) 367, (short) 394, (short) 425, (short) 462, (short) 496, (short) 539, (short) 561, (short) 350}, new short[]{(short) 611, (short) 428, (short) 319, (short) 242, (short) 202, (short) 178, (short) 172, (short) 180, (short) 199, (short) 229, (short) 268, (short) 313, (short) 364, (short) 422, (short) 482, (short) 538, (short) 603, (short) 683, (short) 739, (short) 586}, new short[]{(short) 501, (short) 450, (short) 364, (short) 308, (short) 264, (short) 231, (short) 212, (short) 204, (short) 204, (short) 210, (short) 222, (short) 241, (short) 265, (short) 295, (short) 326, (short) 362, (short) 401, (short) 437, (short) 469, (short) 321}};
    static int[][] SKP_Silk_pulses_per_block_CDF = new int[][]{new int[]{0, 47113, 61501, 64590, 65125, 65277, 65352, 65407, 65450, 65474, 65488, 65501, 65508, 65514, 65516, 65520, 65521, 65523, 65524, 65526, 65535}, new int[]{0, 26368, 47760, 58803, 63085, 64567, 65113, 65333, 65424, 65474, 65498, 65511, 65517, 65520, 65523, 65525, 65526, 65528, 65529, 65530, 65535}, new int[]{0, 9601, 28014, 45877, 57210, 62560, 64611, 65260, 65447, 65500, 65511, 65519, 65521, 65525, 65526, 65529, 65530, 65531, 65532, 65534, 65535}, new int[]{0, 3351, 12462, 25972, 39782, 50686, 57644, 61525, 63521, 64506, 65009, 65255, 65375, 65441, 65471, 65488, 65497, 65505, 65509, 65512, 65535}, new int[]{0, 488, 2944, 9295, 19712, 32160, 43976, 53121, 59144, 62518, 64213, 65016, 65346, 65470, 65511, 65515, 65525, 65529, 65531, 65534, 65535}, new int[]{0, 17013, 30405, 40812, 48142, 53466, 57166, 59845, 61650, 62873, 63684, 64223, 64575, 64811, 64959, 65051, 65111, 65143, 65165, 65183, 65535}, new int[]{0, 2994, 8323, 15845, 24196, 32300, 39340, 45140, 49813, 53474, 56349, 58518, 60167, 61397, 62313, 62969, 63410, 63715, 63906, 64056, 65535}, new int[]{0, 88, 721, 2795, 7542, 14888, 24420, 34593, 43912, 51484, 56962, 60558, 62760, 64037, 64716, 65069, 65262, 65358, 65398, 65420, 65535}, new int[]{0, 287, 789, 2064, 4398, 8174, 13534, 20151, 27347, 34533, 41295, 47242, 52070, 55772, 58458, 60381, 61679, 62533, 63109, 63519, 65535}, new int[]{0, 1, 3, 91, 4521, 14708, 28329, 41955, 52116, 58375, 61729, 63534, 64459, 64924, 65092, 65164, 65182, 65198, 65203, 65211, 65535}};
    static final int SKP_Silk_pulses_per_block_CDF_offset = 6;
    static short[][] SKP_Silk_rate_levels_BITS_Q6 = new short[][]{new short[]{(short) 322, (short) 167, (short) 199, (short) 164, (short) 239, (short) 178, (short) 157, (short) 231, (short) 304}, new short[]{(short) 188, (short) 137, (short) 153, (short) 171, (short) 204, (short) 285, (short) 297, (short) 237, (short) 358}};
    static int[][] SKP_Silk_rate_levels_CDF = new int[][]{new int[]{0, 2005, 12717, 20281, 31328, 36234, 45816, 57753, 63104, 65535}, new int[]{0, 8553, 23489, 36031, 46295, 53519, 56519, 59151, 64185, 65535}};
    static final int SKP_Silk_rate_levels_CDF_offset = 4;
    static int[] SKP_Silk_shell_code_table0 = new int[]{0, 32748, 65535, 0, 9505, 56230, 65535, 0, 4093, 32204, 61720, 65535, 0, 2285, 16207, 48750, 63424, 65535, 0, 1709, 9446, 32026, 55752, 63876, 65535, 0, 1623, 6986, 21845, 45381, 59147, 64186, 65535};
    static int[] SKP_Silk_shell_code_table1 = new int[]{0, 32691, 65535, 0, 12782, 52752, 65535, 0, 4847, 32665, 60899, 65535, 0, 2500, 17305, 47989, 63369, 65535, 0, 1843, 10329, 32419, 55433, 64277, 65535, 0, 1485, 7062, 21465, 43414, 59079, 64623, 65535, 0, 0, 4841, 14797, 31799, 49667, 61309, 65535, 65535, 0, 0, 0, 8032, 21695, 41078, 56317, 65535, 65535, 65535};
    static int[] SKP_Silk_shell_code_table2 = new int[]{0, 32615, 65535, 0, 14447, 50912, 65535, 0, 6301, 32587, 59361, 65535, 0, 3038, 18640, 46809, 62852, 65535, 0, 1746, 10524, 32509, 55273, 64278, 65535, 0, 1234, 6360, 21259, 43712, 59651, 64805, 65535, 0, 1020, 4461, 14030, 32286, 51249, 61904, 65100, 65535, 0, 851, 3435, 10006, 23241, 40797, 55444, 63009, 65252, 65535, 0, 0, 2075, 7137, 17119, 31499, 46982, 58723, 63976, 65535, 65535, 0, 0, 0, 3820, 11572, 23038, 37789, 51969, 61243, 65535, 65535, 65535, 0, 0, 0, 0, 6882, 16828, 30444, 44844, 57365, 65535, 65535, 65535, 65535, 0, 0, 0, 0, 0, 10093, 22963, 38779, 54426, 65535, 65535, 65535, 65535, 65535};
    static int[] SKP_Silk_shell_code_table3 = new int[]{0, 32324, 65535, 0, 15328, 49505, 65535, 0, 7474, 32344, 57955, 65535, 0, 3944, 19450, 45364, 61873, 65535, 0, 2338, 11698, 32435, 53915, 63734, 65535, 0, 1506, 7074, 21778, 42972, 58861, 64590, 65535, 0, 1027, 4490, 14383, 32264, 50980, 61712, 65043, 65535, 0, 760, 3022, 9696, 23264, 41465, 56181, 63253, 65251, 65535, 0, 579, 2256, 6873, 16661, 31951, 48250, 59403, 64198, 65360, 65535, 0, 464, 1783, 5181, 12269, 24247, 39877, 53490, 61502, 64591, 65410, 65535, 0, 366, 1332, 3880, 9273, 18585, 32014, 45928, 56659, 62616, 64899, 65483, 65535, 0, 286, 1065, 3089, 6969, 14148, 24859, 38274, 50715, 59078, 63448, 65091, 65481, 65535, 0, 0, 482, 2010, 5302, 10408, 18988, 30698, 43634, 54233, 60828, 64119, 65288, 65535, 65535, 0, 0, 0, 1006, 3531, 7857, 14832, 24543, 36272, 47547, 56883, 62327, 64746, 65535, 65535, 65535, 0, 0, 0, 0, 1863, 4950, 10730, 19284, 29397, 41382, 52335, 59755, 63834, 65535, 65535, 65535, 65535, 0, 0, 0, 0, 0, 2513, 7290, 14487, 24275, 35312, 46240, 55841, 62007, 65535, 65535, 65535, 65535, 65535, 0, 0, 0, 0, 0, 0, 3606, 9573, 18764, 28667, 40220, 51290, 59924, 65535, 65535, 65535, 65535, 65535, 65535, 0, 0, 0, 0, 0, 0, 0, 4879, 13091, 23376, 36061, 49395, 59315, 65535, 65535, 65535, 65535, 65535, 65535, 65535};
    static int[] SKP_Silk_shell_code_table_offsets = new int[]{0, 0, 3, 7, 12, 18, 25, 33, 42, 52, 63, 75, 88, 102, WavAudioFormat.WAVE_FORMAT_VOXWARE_METASOUND, 133, JNIEncoder.DEFAULT_KEYINT, 168, 187};
}
